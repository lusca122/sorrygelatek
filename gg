_G.Velocity = Vector3.new(-35,0,0)
local CustomTheme = {
    SchemeColor = Color3.fromRGB(73,100,135),
    Background = Color3.fromRGB(35,36,41),
    Header = Color3.fromRGB(28,29,33),
    TextColor = Color3.fromRGB(255,255,255),
    ElementColor = Color3.fromRGB(33,32,38)
}
----- Start
--[[
    Fast Access: (CTRL + F)
    Animationssss - Animations
    OOPPPPTIONSMEOW - Options
    SCRIPTSLETSGOBABY - Scripts
    HOMEEENYAW - Home
]]

_G.PDeath = false
_G.R15Bullet = false
_G.R15HeadFix = false
_G.R6Fling = false
_G.Anims = false
if not _G.Velocity then _G.Velocity = Vector3.new(-35,0,0) end
    HumanDied = false
function R6()
local Count = 1
function Align(Part0,Part1,Position,Angle)
	local AlignPosition = Instance.new('AlignPosition', Part1); AlignPosition.Name = "MiztWeldPos "..Count
	AlignPosition.ApplyAtCenterOfMass = true;
	AlignPosition.MaxForce = 600000;
	AlignPosition.MaxVelocity = math.huge/9e110;
	AlignPosition.ReactionForceEnabled = false;
	AlignPosition.Responsiveness = 200;
	AlignPosition.RigidityEnabled = false;

	local AlignOrientation = Instance.new('AlignOrientation', Part1); AlignOrientation.Name = "MiztWeldOri "..Count
	AlignOrientation.MaxAngularVelocity = math.huge/9e10;
	AlignOrientation.MaxTorque = 600000;
	AlignOrientation.PrimaryAxisOnly = false;
	AlignOrientation.ReactionTorqueEnabled = false;
	AlignOrientation.Responsiveness = 200;
	AlignOrientation.RigidityEnabled = false;

	local Attachment1 = Instance.new('Attachment',Part1); Attachment1.Name = "MiztAttachmentPos"..Count
	local Attachment2 = Instance.new('Attachment',Part0); Attachment2.Name = "MiztAttachmentPos"..Count
	local Attachment3 = Instance.new('Attachment',Part1); Attachment3.Name = "MiztAttachmentOri"..Count
	local Attachment4 = Instance.new('Attachment',Part0); Attachment4.Name = "MiztAttachmentOri"..Count

	Attachment3.Orientation = Angle
	Attachment1.Position = Position

	AlignPosition.Attachment1 = Attachment1;
	AlignPosition.Attachment0 = Attachment2;
	AlignOrientation.Attachment1 = Attachment3;
	AlignOrientation.Attachment0 = Attachment4;
	Count = Count + 1
end

-- Variables


local PPlayer = game:GetService("Players").LocalPlayer
local SwagCharacter = PPlayer.Character
game:GetService("RunService").RenderStepped:Connect(function()
    settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
    settings().Physics.AllowSleep = false
    PPlayer.ReplicationFocus = workspace
    sethiddenproperty(PPlayer, "SimulationRadius", 1000)
    sethiddenproperty(PPlayer, "MaxSimulationRadius", 1000)
end)

if _G.PDeath == false then
-- Creating Early Variables.
local Player = game.Players.LocalPlayer
local Character = Player.Character
local PlayerName = Player.Name
local Physics = settings().Physics
local Head = Character:FindFirstChild("Head")
local Torso = Character:FindFirstChild("Torso")
local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
local Humanoid = Character:FindFirstChild("Humanoid")
local LeftArm = Character:FindFirstChild("Left Arm")
local LeftLeg = Character:FindFirstChild("Left Leg")
local RightArm = Character:FindFirstChild("Right Arm")
local RightLeg = Character:FindFirstChild("Right Leg")
local Reanimated = true

if Humanoid.RigType == Enum.HumanoidRigType.R15 then
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
        Text = "[Shiba Hub] You are on R15! Please use the R15 Reanimation instead.",
        Color = Color3.fromRGB(255, 10, 70),
        TextSize = 18,
        Font = Enum.Font.Ubuntu
    });
return end
if workspace:FindFirstChild("ShibaReanimate") then
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
        Text = "[Shiba Hub] You are already reanimated! Please reset to unreanimate.",
        Color = Color3.fromRGB(255, 10, 70),
        TextSize = 18,
        Font = Enum.Font.Ubuntu
    });
return end

Character.Archivable = true
-- Checks if player died so it doesnt run again.
game:WaitForChild("Run Service").RenderStepped:Connect(function()
if Character:FindFirstChild("Humanoid").Health == 0 then
    Reanimated = false
    wait(9e9^30)
    end
end)
-- Start reanimation

game:WaitForChild("Run Service").Heartbeat:Connect(function()
    if Reanimated == true then
        if workspace:FindFirstChild("ShibaReanimate") then
            Character.Torso.CFrame = workspace.ShibaReanimate.Torso.CFrame
        end
		RightArm.Velocity = _G.Velocity
        RightLeg.Velocity =_G.Velocity
        LeftArm.Velocity = _G.Velocity
        LeftLeg.Velocity = _G.Velocity
                    if _G.R6Fling == true then
            Torso.Velocity = Vector3.new(9999,9999,9999)
            else
                Torso.Velocity = _G.Velocity
                end
        HumanoidRootPart.Velocity = _G.Velocity
        for _, Accessories in pairs(Character:GetDescendants()) do
            if Accessories:IsA("Accessory") then
                Accessories.Handle.Velocity = _G.Velocity
            end
	end
	
    end
end)

local CopyCharacter = Character:Clone()
CopyCharacter.Parent = workspace 
CopyCharacter.Name = "ShibaReanimate" -- you can always change name.

for k,parts in pairs(workspace.ShibaReanimate:GetDescendants()) do 
    if parts:IsA("Part") or parts:IsA("Decal") then
        parts.Transparency = 1
    end
end

Character.Torso["Left Shoulder"]:Destroy()
Character.Torso["Right Shoulder"]:Destroy()
Character.Torso["Left Hip"]:Destroy()
Character.Torso["Right Hip"]:Destroy()
HumanoidRootPart.RootJoint:Destroy()

Align(Torso,CopyCharacter["Torso"],Vector3.new(0,0,0),Vector3.new(0,0,0))
Align(HumanoidRootPart,CopyCharacter["HumanoidRootPart"],Vector3.new(0,0,0),Vector3.new(0,0,0))
Align(LeftArm,CopyCharacter["Left Arm"],Vector3.new(0,0,0),Vector3.new(0,0,0))
Align(RightArm,CopyCharacter["Right Arm"],Vector3.new(0,0,0),Vector3.new(0,0,0))
Align(LeftLeg,CopyCharacter["Left Leg"],Vector3.new(0,0,0),Vector3.new(0,0,0))
Align(RightLeg,CopyCharacter["Right Leg"],Vector3.new(0,0,0),Vector3.new(0,0,0))
CopyCharacter:FindFirstChild("HumanoidRootPart").Anchored = false
spawn(function() 
    while true do wait()
        if Character:FindFirstChild("Humanoid").Health == 0 then 
                Character:BreakJoints()
                CopyCharacter:Destroy()
                CopyCharacter:BreakJoints()
        end
    end 
end)


function NoCollisionConstraint(t)
    for k,l in pairs(Character:GetDescendants()) do 
        if l:IsA("BasePart")then 
            HILOL=Instance.new("NoCollisionConstraint",l)
            HILOL.Part0=l
            HILOL.Part1=t 
        end 
    end 
end

for k,l in pairs(CopyCharacter:GetDescendants()) do
     if l:IsA("BasePart")then 
        NoCollisionConstraint(l)
    end 
end

Torso.Anchored = true
LeftArm.Anchored = true
RightArm.Anchored = true
LeftLeg.Anchored = true
RightLeg.Anchored = true
Head.Anchored = true
local cchumanoid = game.workspace:WaitForChild("ShibaReanimate").Humanoid
local ccroot = game.workspace:WaitForChild("ShibaReanimate").HumanoidRootPart
for k=0,30 do wait()
   ccroot.RotVelocity = Vector3.new(0,0,0)
   ccroot.Velocity = Vector3.new(0,0,0)
end

Character.Animate.Disabled = true

game:GetService("UserInputService").JumpRequest:connect(function(t)
    if cchumanoid.FloorMaterial~=Enum.Material.Air then 
        cchumanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        workspace.ShibaReanimate:FindFirstChildOfClass('Humanoid').Sit=false 
    end 
end)


game.RunService.RenderStepped:Connect(function()
    cchumanoid:Move(Character.Humanoid.MoveDirection,false)
    local animtracks = Humanoid:GetPlayingAnimationTracks()
        for n,l in pairs(animtracks) do 
            l:Stop()
        end 
end)

Torso.Anchored = false
LeftArm.Anchored = false
RightArm.Anchored = false
LeftLeg.Anchored = false
RightLeg.Anchored = false
Head.Anchored = false

local something = true
while true do 
    if something == true then 
        for n,l in pairs(Character:children()) do 
            pcall(function()
                if l.className=="Part" then 
                    l.CanCollide=false 
                elseif 
                    l.ClassName=="Model" then 
                        l.Head.CanCollide=false 
                end
            end)
        end
    end
game:service("RunService").Stepped:wait()
end
elseif _G.PDeath == true then

    local Count = 1
function PDeathAlign(Part0,Part1,Position,Angle)
    game['Run Service'].Heartbeat:Connect(function()
        Part0.Velocity = _G.Velocity
    end)
	local AlignPosition = Instance.new('AlignPosition', Part1); AlignPosition.Name = "MiztWeldPos "..Count
	AlignPosition.ApplyAtCenterOfMass = true;
	AlignPosition.MaxForce = 600000;
	AlignPosition.MaxVelocity = math.huge/9e110;
	AlignPosition.ReactionForceEnabled = false;
	AlignPosition.Responsiveness = 200;
	AlignPosition.RigidityEnabled = false;

	local AlignOrientation = Instance.new('AlignOrientation', Part1); AlignOrientation.Name = "MiztWeldOri "..Count
	AlignOrientation.MaxAngularVelocity = math.huge/9e10;
	AlignOrientation.MaxTorque = 600000;
	AlignOrientation.PrimaryAxisOnly = false;
	AlignOrientation.ReactionTorqueEnabled = false;
	AlignOrientation.Responsiveness = 200;
	AlignOrientation.RigidityEnabled = false;

	local Attachment1 = Instance.new('Attachment',Part1); Attachment1.Name = "MiztAttachmentPos"..Count
	local Attachment2 = Instance.new('Attachment',Part0); Attachment2.Name = "MiztAttachmentPos"..Count
	local Attachment3 = Instance.new('Attachment',Part1); Attachment3.Name = "MiztAttachmentOri"..Count
	local Attachment4 = Instance.new('Attachment',Part0); Attachment4.Name = "MiztAttachmentOri"..Count

	Attachment3.Orientation = Angle
	Attachment1.Position = Position

	AlignPosition.Attachment1 = Attachment1;
	AlignPosition.Attachment0 = Attachment2;
	AlignOrientation.Attachment1 = Attachment3;
	AlignOrientation.Attachment0 = Attachment4;
	Count = Count + 1
end
HumanDied = false
	game:GetService("Players").LocalPlayer["Character"].Archivable = true 
	local CloneChar = game:GetService("Players").LocalPlayer["Character"]:Clone()
	game:GetService("Players").LocalPlayer["Character"].Humanoid.WalkSpeed = 0 
	game:GetService("Players").LocalPlayer["Character"].Humanoid.JumpPower = 0 
	game:GetService("Players").LocalPlayer["Character"].Humanoid.AutoRotate = false
	local FalseChar = Instance.new("Model", workspace); FalseChar.Name = ""
	Instance.new("Part",FalseChar).Name = "Head" 
	Instance.new("Part",FalseChar).Name = "Torso" 
	Instance.new("Humanoid",FalseChar).Name = "Humanoid"
	game:GetService("Players").LocalPlayer["Character"] = FalseChar
	game:GetService("Players").LocalPlayer["Character"].Humanoid.Name = "FalseHumanoid"
	local Clone = game:GetService("Players").LocalPlayer["Character"]:FindFirstChild("FalseHumanoid"):Clone()
	Clone.Parent = game:GetService("Players").LocalPlayer["Character"]
	Clone.Name = "Humanoid"
	game:GetService("Players").LocalPlayer["Character"]:FindFirstChild("FalseHumanoid"):Destroy() 
	game:GetService("Players").LocalPlayer["Character"].Humanoid.Health = 0 
	game:GetService("Players").LocalPlayer["Character"] = workspace[game:GetService("Players").LocalPlayer.Name] 
	wait(5.65) 
	game:GetService("Players").LocalPlayer["Character"].Humanoid.Health = 0
	CloneChar.Parent = workspace 
	CloneChar.HumanoidRootPart.CFrame = game:GetService("Players").LocalPlayer["Character"].HumanoidRootPart.CFrame * CFrame.new(0,2,0)
	wait() 
	CloneChar.Humanoid.BreakJointsOnDeath = false
	workspace.Camera.CameraSubject = CloneChar.Humanoid 
	CloneChar.Name = "ShibaReanimate" 
	CloneChar.Humanoid.DisplayDistanceType = "None"
	if CloneChar.Head:FindFirstChild("face") then CloneChar.Head:FindFirstChild("face"):Destroy() end
	if workspace[game:GetService("Players").LocalPlayer.Name].Head:FindFirstChild("face") then workspace[game:GetService("Players").LocalPlayer.Name].Head:FindFirstChild("face").Parent = CloneChar.Head end
	FalseChar:Destroy()


    
	local DeadChar = workspace[game:GetService("Players").LocalPlayer.Name]
    _G.ActualPDeath = true
	local LVecPart = Instance.new("Part", workspace) LVecPart.CanCollide = false LVecPart.Transparency = 1
	local CONVEC
	local function VECTORUNIT()
	if HumanDied then CONVEC:Disconnect(); return end
	local lookVec = workspace.Camera.CFrame.lookVector
	local Root = CloneChar["HumanoidRootPart"]
	LVecPart.Position = Root.Position
	LVecPart.CFrame = CFrame.new(LVecPart.Position, Vector3.new(lookVec.X * 9999, lookVec.Y, lookVec.Z * 9999))
	end
	CONVEC = game:GetService("RunService").Heartbeat:Connect(VECTORUNIT)

	local CONDOWN
	local WDown, ADown, SDown, DDown, SpaceDown = false, false, false, false, false
	local function KEYDOWN(_,Processed) 
	if HumanDied then CONDOWN:Disconnect(); return end
	if Processed ~= true then
	local Key = _.KeyCode
	if Key == Enum.KeyCode.W then
	WDown = true end
	if Key == Enum.KeyCode.A then
	ADown = true end
	if Key == Enum.KeyCode.S then
	SDown = true end
	if Key == Enum.KeyCode.D then
	DDown = true end
	if Key == Enum.KeyCode.Space then
	SpaceDown = true end end end
	CONDOWN = game:GetService("UserInputService").InputBegan:Connect(KEYDOWN)

	local CONUP
	local function KEYUP(_)
	if HumanDied then CONUP:Disconnect(); return end
	local Key = _.KeyCode
	if Key == Enum.KeyCode.W then
	WDown = false end
	if Key == Enum.KeyCode.A then
	ADown = false end
	if Key == Enum.KeyCode.S then
	SDown = false end
	if Key == Enum.KeyCode.D then
	DDown = false end
	if Key == Enum.KeyCode.Space then
	SpaceDown = false end end
	CONUP = game:GetService("UserInputService").InputEnded:Connect(KEYUP)

	local function MoveClone(X,Y,Z)
	LVecPart.CFrame = LVecPart.CFrame * CFrame.new(-X,Y,-Z)
	workspace["ShibaReanimate"].Humanoid.WalkToPoint = LVecPart.Position
	end

	coroutine.wrap(function() 
	while true do game:GetService("RunService").RenderStepped:Wait()
	if HumanDied then break end
	if WDown then MoveClone(0,0,1e4) end
	if ADown then MoveClone(1e4,0,0) end
	if SDown then MoveClone(0,0,-1e4) end
	if DDown then MoveClone(-1e4,0,0) end
	if SpaceDown then CloneChar["Humanoid"].Jump = true end
	if WDown ~= true and ADown ~= true and SDown ~= true and DDown ~= true then
	workspace["ShibaReanimate"].Humanoid.WalkToPoint = workspace["ShibaReanimate"].HumanoidRootPart.Position end
	end 
	end)()

	local con
	function UnCollide()
		if HumanDied then con:Disconnect(); return end
		for _,Parts in next, CloneChar:GetDescendants() do
			if Parts:IsA("BasePart") then
				Parts.CanCollide = false 
			end 
		end
		for _,Parts in next, DeadChar:GetDescendants() do
			if Parts:IsA("BasePart") then
			Parts.CanCollide = false
			end 
		end 
	end
	con = game:GetService("RunService").Stepped:Connect(UnCollide)

	local resetBindable = Instance.new("BindableEvent")
	resetBindable.Event:connect(function()
		game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
		resetBindable:Destroy()
		CloneChar.Humanoid.Health = 0
	end)
	game:GetService("StarterGui"):SetCore("ResetButtonCallback", resetBindable)

	coroutine.wrap(function()
		while true do
			game:GetService("RunService").RenderStepped:wait()
			if not CloneChar or not CloneChar:FindFirstChild("Head") or not CloneChar:FindFirstChild("Humanoid") or CloneChar:FindFirstChild("Humanoid").Health <= 0 then 
				HumanDied = true
				pcall(function()
					game.Players.LocalPlayer.Character = CloneChar
					CloneChar:Destroy()
					game.Players.LocalPlayer.Character = DeadChar
					if resetBindable then
						game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
						resetBindable:Destroy()
					end
					DeadChar.Humanoid.Health = 0
                    _G.ActualPDeath = false
                    LVecPart:Destroy()
				end)
				break
			end		
		end
	end)()


    
	PDeathAlign(DeadChar["Head"],CloneChar["Head"],Vector3.new(0,0,0),Vector3.new(0,0,0))
	PDeathAlign(DeadChar["Torso"],CloneChar["Torso"],Vector3.new(0,0,0),Vector3.new(0,0,0))
	PDeathAlign(DeadChar["Left Arm"],CloneChar["Left Arm"],Vector3.new(0,0,0),Vector3.new(0,0,0))
	PDeathAlign(DeadChar["Right Arm"],CloneChar["Right Arm"],Vector3.new(0,0,0),Vector3.new(0,0,0))
	PDeathAlign(DeadChar["Left Leg"],CloneChar["Left Leg"],Vector3.new(0,0,0),Vector3.new(0,0,0))
	PDeathAlign(DeadChar["Right Leg"],CloneChar["Right Leg"],Vector3.new(0,0,0),Vector3.new(0,0,0))
    PDeathAlign(DeadChar["HumanoidRootPart"],CloneChar["HumanoidRootPart"],Vector3.new(0,0,0),Vector3.new(0,0,0))

	for _,v in next, DeadChar:GetChildren() do
		if v:IsA("Accessory") then
			PDeathAlign(v.Handle,CloneChar[v.Name].Handle,Vector3.new(0,0,0),Vector3.new(0,0,0))
		end
	end

	for _,BodyParts in next, CloneChar:GetDescendants() do
	if BodyParts:IsA("BasePart") or BodyParts:IsA("Part") then
	BodyParts.Transparency = 1 end end
end

end

function R15()

    local Player = game.Players.LocalPlayer
local Character = Player.Character
local PlayerName = Player.Name
local Physics = settings().Physics
local Head = Character:FindFirstChild("Head")
local Torso = Character:FindFirstChild("Torso")
local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")
local Humanoid = Character:FindFirstChild("Humanoid")
local LeftArm = Character:FindFirstChild("Left Arm")
local LeftLeg = Character:FindFirstChild("Left Leg")
local RightArm = Character:FindFirstChild("Right Arm")
local RightLeg = Character:FindFirstChild("Right Leg")
local Reanimated = true

if Humanoid.RigType == Enum.HumanoidRigType.R6 then
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
        Text = "[Shiba Hub] You are on R6! Please use the R6 Reanimation instead.",
        Color = Color3.fromRGB(255, 10, 70),
        TextSize = 18,
        Font = Enum.Font.Ubuntu
    });
return end
if workspace:FindFirstChild("ShibaReanimate") then
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
        Text = "[Shiba Hub] You are already reanimated! Please reset to unreanimate.",
        Color = Color3.fromRGB(255, 10, 70),
        TextSize = 18,
        Font = Enum.Font.Ubuntu
    });
return end
HumanDied = false
    local plr = game.Players.LocalPlayer
    local physicSettings = settings().Physics
        physicSettings.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
        physicSettings.AllowSleep = false
        plr.ReplicationFocus = workspace
        sethiddenproperty(plr,"SimulationRadius",1000)
        sethiddenproperty(plr,"MaxSimulationRadius",1000)
    
    local CountSCIFIMOVIELOL = 1
    function SCIFIMOVIELOL(Part0,Part1,Position,Angle)
            game['Run Service'].Heartbeat:Connect(function()
            Part0.Velocity = _G.Velocity
        end)
        local AlignPos = Instance.new('AlignPosition', Part1); AlignPos.Name = "AliP_"..CountSCIFIMOVIELOL
        AlignPos.ApplyAtCenterOfMass = true;
        AlignPos.MaxForce = 600000;
        AlignPos.MaxVelocity = math.huge/9e110;
        AlignPos.ReactionForceEnabled = false;
        AlignPos.Responsiveness = 200;
        AlignPos.RigidityEnabled = false;
        local AlignOri = Instance.new('AlignOrientation', Part1); AlignOri.Name = "AliO_"..CountSCIFIMOVIELOL
        AlignOri.MaxAngularVelocity = math.huge/9e110;
        AlignOri.MaxTorque = 600000;
        AlignOri.PrimaryAxisOnly = false;
        AlignOri.ReactionTorqueEnabled = false;
        AlignOri.Responsiveness = 200;
        AlignOri.RigidityEnabled = false;
        local AttachmentA=Instance.new('Attachment',Part1); AttachmentA.Name = "AthP_"..CountSCIFIMOVIELOL
        local AttachmentB=Instance.new('Attachment',Part0); AttachmentB.Name = "AthP_"..CountSCIFIMOVIELOL
        local AttachmentC=Instance.new('Attachment',Part1); AttachmentC.Name = "AthO_"..CountSCIFIMOVIELOL
        local AttachmentD=Instance.new('Attachment',Part0); AttachmentD.Name = "AthO_"..CountSCIFIMOVIELOL
        AttachmentC.Orientation = Angle
        AttachmentA.Position = Position
        AlignPos.Attachment1 = AttachmentA;
        AlignPos.Attachment0 = AttachmentB;
        AlignOri.Attachment1 = AttachmentC;
        AlignOri.Attachment0 = AttachmentD;
        CountSCIFIMOVIELOL = CountSCIFIMOVIELOL + 1
    end
    
        game:GetService("Players").LocalPlayer["Character"].Archivable = true 
        local CloneChar = game:GetObjects("rbxassetid://5227463276")[1]
        CloneChar.Parent = workspace 
        CloneChar.HumanoidRootPart.CFrame = game:GetService("Players").LocalPlayer["Character"].HumanoidRootPart.CFrame * CFrame.new(0,0.5,0.1)
        CloneChar.Humanoid.BreakJointsOnDeath = false
        workspace.Camera.CameraSubject = CloneChar.Humanoid 
        CloneChar.Name = "ShibaReanimate" 
        CloneChar.Humanoid.DisplayDistanceType = "None"
        if CloneChar.Head:FindFirstChild("face") then CloneChar.Head:FindFirstChild("face"):Destroy() end
        if workspace[game:GetService("Players").LocalPlayer.Name].Head:FindFirstChild("face") then workspace[game:GetService("Players").LocalPlayer.Name].Head:FindFirstChild("face").Parent = CloneChar.Head end

        local DeadChar = workspace[game:GetService("Players").LocalPlayer.Name]
        if _G.R15Bullet == false then
        DeadChar.HumanoidRootPart:Destroy()
        end
        
        local LVecPart = Instance.new("Part", workspace) LVecPart.CanCollide = false LVecPart.Transparency = 1
        local CONVEC
        local function VECTORUNIT()
        if HumanDied then CONVEC:Disconnect(); return end
        local lookVec = workspace.Camera.CFrame.lookVector
        local Root = CloneChar["HumanoidRootPart"]
        LVecPart.Position = Root.Position
        LVecPart.CFrame = CFrame.new(LVecPart.Position, Vector3.new(lookVec.X * 9999, lookVec.Y, lookVec.Z * 9999))
        end
        CONVEC = game:GetService("RunService").Heartbeat:Connect(VECTORUNIT)
    
        local CONDOWN
        local WDown, ADown, SDown, DDown, SpaceDown = false, false, false, false, false
        local function KEYDOWN(_,Processed) 
        if HumanDied then CONDOWN:Disconnect(); return end
        if Processed ~= true then
        local Key = _.KeyCode
        if Key == Enum.KeyCode.W then
        WDown = true end
        if Key == Enum.KeyCode.A then
        ADown = true end
        if Key == Enum.KeyCode.S then
        SDown = true end
        if Key == Enum.KeyCode.D then
        DDown = true end
        if Key == Enum.KeyCode.Space then
        SpaceDown = true end end end
        CONDOWN = game:GetService("UserInputService").InputBegan:Connect(KEYDOWN)
    
        local CONUP
        local function KEYUP(_)
        if HumanDied then CONUP:Disconnect(); return end
        local Key = _.KeyCode
        if Key == Enum.KeyCode.W then
        WDown = false end
        if Key == Enum.KeyCode.A then
        ADown = false end
        if Key == Enum.KeyCode.S then
        SDown = false end
        if Key == Enum.KeyCode.D then
        DDown = false end
        if Key == Enum.KeyCode.Space then
        SpaceDown = false end end
        CONUP = game:GetService("UserInputService").InputEnded:Connect(KEYUP)
    
        local function MoveClone(X,Y,Z)
        LVecPart.CFrame = LVecPart.CFrame * CFrame.new(-X,Y,-Z)
        workspace["ShibaReanimate"].Humanoid.WalkToPoint = LVecPart.Position
        end
    
        coroutine.wrap(function() 
        while true do game:GetService("RunService").RenderStepped:Wait()
        if HumanDied then break end
        if WDown then MoveClone(0,0,1e4) end
        if ADown then MoveClone(1e4,0,0) end
        if SDown then MoveClone(0,0,-1e4) end
        if DDown then MoveClone(-1e4,0,0) end
        if SpaceDown then CloneChar["Humanoid"].Jump = true end
        if WDown ~= true and ADown ~= true and SDown ~= true and DDown ~= true then
        workspace["ShibaReanimate"].Humanoid.WalkToPoint = workspace["ShibaReanimate"].HumanoidRootPart.Position end
        end 
        end)()
    
        local con
        function UnCollide()
            if HumanDied then con:Disconnect(); return end
            for _,Parts in next, CloneChar:GetDescendants() do
                if Parts:IsA("BasePart") then
                    Parts.CanCollide = false 
                end 
            end
            for _,Parts in next, DeadChar:GetDescendants() do
                if Parts:IsA("BasePart") then
                Parts.CanCollide = false
                end 
            end 
        end
        con = game:GetService("RunService").Stepped:Connect(UnCollide)
    
        local resetBindable = Instance.new("BindableEvent")
        resetBindable.Event:connect(function()
            game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
            resetBindable:Destroy()
            CloneChar.Humanoid.Health = 0
        end)
        game:GetService("StarterGui"):SetCore("ResetButtonCallback", resetBindable)
    
        coroutine.wrap(function()
            while true do
                game:GetService("RunService").RenderStepped:wait()
                if not CloneChar or not CloneChar:FindFirstChild("Head") or not CloneChar:FindFirstChild("Humanoid") or CloneChar:FindFirstChild("Humanoid").Health <= 0 or not DeadChar or not DeadChar:FindFirstChild("Head") or not DeadChar:FindFirstChild("Humanoid") or DeadChar:FindFirstChild("Humanoid").Health <= 0 then 
                    HumanDied = true
                    pcall(function()
                        game.Players.LocalPlayer.Character = CloneChar
                        CloneChar:Destroy()
                        game.Players.LocalPlayer.Character = DeadChar
                        if resetBindable then
                            game:GetService("StarterGui"):SetCore("ResetButtonCallback", true)
                            resetBindable:Destroy()
                        end
                        DeadChar.Humanoid.Health = 0
                    end)
                    break
                end		
            end
        end)()
    
        for _,v in next, DeadChar:GetChildren() do
            if v:IsA("Accessory") then
                v:Clone().Parent = CloneChar
            end
        end
    
        for _,v in next, DeadChar:GetDescendants() do
            if v:IsA("Motor6D") and v.Name ~= "Neck" then
                v:Destroy()
            end
        end
        if _G.R15Bullet == true then
            SCIFIMOVIELOL(DeadChar["HumanoidRootPart"],CloneChar["HumanoidRootPart"],Vector3.new(0,0,0),Vector3.new(0,0,0))
        end

        SCIFIMOVIELOL(DeadChar["Head"],CloneChar["Head"],Vector3.new(0,0,0),Vector3.new(0,0,0))
        SCIFIMOVIELOL(DeadChar["UpperTorso"],CloneChar["Torso"],Vector3.new(0,0.2,0),Vector3.new(0,0,0))
        SCIFIMOVIELOL(DeadChar["LowerTorso"],CloneChar["Torso"],Vector3.new(0,-0.78,0),Vector3.new(0,0,0))
        SCIFIMOVIELOL(DeadChar["LeftUpperArm"],CloneChar["Left Arm"],Vector3.new(0,0.375,0),Vector3.new(0,0,0))
        SCIFIMOVIELOL(DeadChar["LeftLowerArm"],CloneChar["Left Arm"],Vector3.new(0,-0.215,0),Vector3.new(0,0,0))
        SCIFIMOVIELOL(DeadChar["LeftHand"],CloneChar["Left Arm"],Vector3.new(0,-0.825,0),Vector3.new(0,0,0))
        SCIFIMOVIELOL(DeadChar["RightUpperArm"],CloneChar["Right Arm"],Vector3.new(0,0.375,0),Vector3.new(0,0,0))
        SCIFIMOVIELOL(DeadChar["RightLowerArm"],CloneChar["Right Arm"],Vector3.new(0,-0.215,0),Vector3.new(0,0,0))
        SCIFIMOVIELOL(DeadChar["RightHand"],CloneChar["Right Arm"],Vector3.new(0,-0.825,0),Vector3.new(0,0,0))
    
        SCIFIMOVIELOL(DeadChar["LeftUpperLeg"],CloneChar["Left Leg"],Vector3.new(0,0.575,0),Vector3.new(0,0,0))
        SCIFIMOVIELOL(DeadChar["LeftLowerLeg"],CloneChar["Left Leg"],Vector3.new(0,-0.137,0),Vector3.new(0,0,0))
        SCIFIMOVIELOL(DeadChar["LeftFoot"],CloneChar["Left Leg"],Vector3.new(0,-0.787,0),Vector3.new(0,0,0))
        SCIFIMOVIELOL(DeadChar["RightUpperLeg"],CloneChar["Right Leg"],Vector3.new(0,0.575,0),Vector3.new(0,0,0))
        SCIFIMOVIELOL(DeadChar["RightLowerLeg"],CloneChar["Right Leg"],Vector3.new(0,-0.137,0),Vector3.new(0,0,0))
        SCIFIMOVIELOL(DeadChar["RightFoot"],CloneChar["Right Leg"],Vector3.new(0,-0.787,0),Vector3.new(0,0,0))
    
        coroutine.wrap(function()
            while true do
                game:GetService("RunService").RenderStepped:wait()
                if HumanDied then break end
                DeadChar["UpperTorso"].CFrame = CloneChar["Torso"].CFrame * CFrame.new(0,0.2,0)
            end
        end)()
    
        for _,v in next, DeadChar:GetChildren() do
            if v:IsA("Accessory") then
                SCIFIMOVIELOL(v.Handle,CloneChar[v.Name].Handle,Vector3.new(0,0,0),Vector3.new(0,0,0))
            end
        end
    
        for _,BodyParts in next, CloneChar:GetDescendants() do
        if BodyParts:IsA("BasePart") or BodyParts:IsA("Part") then
        BodyParts.Transparency = 1 end end
            if _G.R15HeadFix == true then
        DeadChar.Animate:Destroy()
        DeadChar.Humanoid.Animator:Destroy()
            end
    
end

if not setsimulationradius then
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
        Text = "[Shiba Hub] Missing Function: setsimulationradius.",
        Color = Color3.fromRGB(255, 10, 70),
        TextSize = 18,
        Font = Enum.Font.Ubuntu
    });
return end

if not sethiddenproperty then
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
        Text = "[Shiba Hub] Missing Function: sethiddenproperty.",
        Color = Color3.fromRGB(255, 10, 70),
        TextSize = 18,
        Font = Enum.Font.Ubuntu
    });
return end

function playid(id) -- thanks to BXFE for this :D (all credits go to them)
    _G.PlayingAnim = true
    repeat wait() until workspace.ShibaReanimate
    animid="rbxassetid://"..tostring(id)
    plr=game.Players.LocalPlayer
    bruhmomentrighthahahahhahah=workspace.ShibaReanimate
    cf=bruhmomentrighthahahahhahah.HumanoidRootPart.CFrame
    t=bruhmomentrighthahahahhahah.Torso
    rs=t["Right Shoulder"]
    ls=t["Left Shoulder"]
    rh=t["Right Hip"]
    lh=t["Left Hip"]
    n=t["Neck"]
    rj=bruhmomentrighthahahahhahah.HumanoidRootPart["RootJoint"]
    rsc0=rs.C0
    lsc0=ls.C0
    rhc0=rh.C0
    lhc0=lh.C0
    rjc0=rj.C0
    nc0=n.C0
    gc0=CFrame.new()
    orsc0=rs.C0
    olsc0=ls.C0
    orhc0=rh.C0
    olhc0=lh.C0
    orjc0=rj.C0
    onc0=n.C0
    count2 = 100
    maxcount2=100
    game.Players.LocalPlayer.Character.Humanoid.Died:Connect(function()
        _G.PlayingAnim = false
    end)
    game["Run Service"].Heartbeat:Connect(function()
        count2 = count2+1
        if count2<=maxcount2 then
            rs.Transform=rs.Transform:Lerp(rsc0,count2/maxcount2)
            ls.Transform=ls.Transform:Lerp(lsc0,count2/maxcount2)
            rh.Transform=rh.Transform:Lerp(rhc0,count2/maxcount2)
            lh.Transform=lh.Transform:Lerp(lhc0,count2/maxcount2)
            n.Transform=n.Transform:Lerp(nc0,count2/maxcount2)
            rj.Transform=rj.Transform:Lerp(rjc0,count2/maxcount2)
        end
    end)
    animid=game:GetObjects(animid)[1]
    function wait2(tim)
        if tim<0.1 then
            game.RunService.Heartbeat:Wait()
            game.RunService.Heartbeat:Wait()
        else
        for i=1,tim*40 do
            game.RunService.Heartbeat:Wait()
            game.RunService.Heartbeat:Wait()
        end
        end
    end
    anim={}
    function kftotbl(kf)
        tbl3 = {}
        for i,v in pairs(kf:GetDescendants()) do
            if v:IsA("Pose") then
            tbl3[string.sub(v.Name,1,1)..string.sub(v.Name,#v.Name,#v.Name)] = v.CFrame
            end
        end
        return(tbl3)
    end
    for i,v in pairs(animid:GetChildren()) do
        if v:IsA("Keyframe") then
        anim[v.Time]=kftotbl(v)
        end
    end
 
    function getnext(tbl,number)
    c=100
    rtrnv=0
    for i,v in pairs(tbl) do
        if i>number and i-number<c then
            c=i-number
            rtrnv=i
        end
    end
    return(rtrnv)
    end
    count = 0
    char=game.workspace.ShibaReanimate
    hhhh=game.workspace.ShibaReanimate.Humanoid.Animator
    hhhh.Parent = nil
    for _,v in pairs(char.Humanoid:GetPlayingAnimationTracks()) do
        v:Stop()
    end
    while wait() do
    for i,oasjdadlasdkadkldjkl in pairs(anim) do
    asdf=getnext(anim,count)
    v=anim[asdf]
    if v["Lg"] then
        lhc0 = v["Lg"]
    end
    if v["Rg"] then
        rhc0 = v["Rg"]
    end
    if v["Lm"] then
        lsc0 = v["Lm"]
    end
    if v["Rm"] then
        rsc0 = v["Rm"]
    end
    if v["To"] then
        rjc0 = v["To"]
    end
    if v["Hd"] then
        nc0 = v["Hd"]
    end
    count2=0
    maxcount2=asdf-count
    count=asdf
    wait2(asdf-count)
    count2=maxcount2
    if v["Lg"] then
        char.Torso["Left Hip"].Transform = v["Lg"]
    end
    if v["Rg"] then
        char.Torso["Right Hip"].Transform = v["Rg"]
    end
    if v["Lm"] then
        char.Torso["Left Shoulder"].Transform = v["Lm"]
    end
    if v["Rm"] then
        char.Torso["Right Shoulder"].Transform = v["Rm"]
    end
    if v["To"] then
        char.HumanoidRootPart["RootJoint"].Transform = v["To"]
    end
    if v["Hd"] then
        char.Torso["Neck"].Transform = v["Hd"]
    end
    end
    end
 end

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
if not CustomTheme then CustomTheme = "BloodTheme" end

local Main = Library.CreateLib("Catware", CustomTheme)

local Tab1 = Main:NewTab("Home")
local Tab2 = Main:NewTab("Reanimate")
local Tab3 = Main:NewTab("Animations")
local Tab3B = Main:NewTab("Hat Scripts")
local Tab4 = Main:NewTab("Free Scripts")
local Tab5 = Main:NewTab("Options")

local Folder1 = Tab1:NewSection("Credits")
local Folder2 = Tab2:NewSection("Reanimate")
local Folder3 = Tab3:NewSection("Animations")
local Folder4 = Tab4:NewSection("Free Scripts")
local Folder5 = Tab3B:NewSection("Hat Scripts")

local Options1 = Tab5:NewSection("Options - Gui/General")
local Options2 = Tab5:NewSection("Options - R6")
local Options3 = Tab5:NewSection("Options - R15")
-- HOMEEENYAW
Folder1:NewButton("Copy Discord Invite", "Copies Discord Invite", function()
    setclipboard("https://discord.gg/uXkSd8CsSs")    
end)

Folder1:NewButton("Copy Mizt Discord Invite", "Copies Mizt (Reanimation by him) Discord Invite", function()
    setclipboard("https://discord.gg/AeWvyAh")    
end)

Folder2:NewButton("R6 Reanimate", "Lets you just reanimate on R6.", function()
    R6()
end)

Folder2:NewButton("R15 Reanimate", "Lets you just reanimate on R15.", function()
    R15()
end)



-- Animationssss
Folder3:NewButton("Freestylin'", "dance", function()
    playid("4432024917")
end)

Folder3:NewButton("Take The L", "dance", function()
    playid("4827299133")
end)

Folder3:NewButton("Orange Justice", "dance", function()
    playid("3262592866")
end)

Folder3:NewButton("Helicopter", "dance", function()
    playid("4724894341")
end)

Folder3:NewButton("Smug", "dance", function()
    playid("3450125501")
end)

Folder3:NewButton("Pogo", "dance", function()
    playid("3053543383")
end)

Folder3:NewTextBox("Custom Anim", "Allows you to play own animation with id", function(txt)
	playid(txt)
end)

-- SCRIPTSLETSGOBABY
Folder4:NewButton("Ender", "Cool script with strong hands.", function()
    -- there will be r15 function 
end)

Folder4:NewButton("Gale Fighter", "Smooth Punches.", function()
    -- there will be r15 function 
end)

Folder4:NewButton("Krystal Dance", "Great Animations", function()
    -- there will be r15 function 
end)

Folder4:NewButton("Sonic", "Gotta Go Fast! Gotta Go Fast!", function()
    -- there will be r15 function 
end)

Folder4:NewButton("Chill", "Vibe!~", function()
    -- there will be r15 function 
end)

Folder4:NewButton("Zen", "Zen animations.", function()
    -- there will be r15 function 
end)

Folder4:NewButton("Memeus", "Meme animations.", function()
    -- there will be r15 function 
end)



Folder5:NewButton("Star Glitcher", "Cool Glitcher.", function()
    -- there will be r15 function 
end)

Folder5:NewButton("The Hotline", "r̴̨̛̗̮̭̤͇̲̫̝͉̗̲̟̰͈̬͙̳̳̻̝̪̓̈̍̈̈́̋͒̓̆̀̽̈́̏̐̋͋̕͜͜͠͝͝ų̶̡̢̛͔̖̞̞̻͙̻̜̲̰̥͔͖̤̦̘̍͌́͂̾̑̌̀͒̓̃̍ͅn̵̢̖̩̮͉̗̩͇͕̝̲̥͚̱̯̆ͅ ̶̢͍͚͓̮͕̽̀̽̒̐͐́â̴̧͓̝͚͔̞̳̳̭̣͕̟̮̼͖̜̘͍̲̦̞͒͐̍̔͂̏̈́̑͂̍̈́̾̍̂͌́̏̐̕͘͠w̴̧̻̝͔͈̞͎̹͙͖̜̟̱̳̮͎͇̰͈̐̿̾a̴̢̭͔̫̣̮͚͕͖̠̞̓̏̎̅̒̂̃͊̔̽̎̒̊̓͆̎̀͋͂͂̆̄͘ͅy̷̡̧͚̳͖̜̯̻͉͈̣̪̯̝̋͛̍", function()
    -- there will be r15 function 
end)

Folder5:NewButton("Neptunian V", "Neptunian V, the most popular script ever to exist.", function()
    -- there will be r15 function 
end)

Folder5:NewButton("Sniper", "Don't use this script without PDeath. Please", function()
    -- there will be r15 function 
end)

Folder5:NewButton("Chips", "doreeto", function()
    -- there will be r15 function 
end)

Folder5:NewButton("Ban Hammer", "BANG", function()
    -- there will be r15 function 
end)

Folder5:NewButton("Dual Ultima", "Double Shreeding Swords.", function()
    -- there will be r15 function 
end)


-- OOPPPPTIONSMEOW
Options1:NewKeybind("Set Keybind To Enable GUI", "Allows you to close/open gui with button you select", Enum.KeyCode.F, function()
	Library:ToggleUI()
end)

Options1:NewToggle("Enable Animations R6/R15", "Allows you to have animations, but expect errors.", function(Check)
    _G.Anims = Check
    print(_G.Anims)
end)

Options2:NewToggle("Close Fling", "Allows you to fling on close range.", function(Check)
    _G.R6Fling = Check
    print(_G.R6Fling)
end)

Options2:NewToggle("Permament Death", "Enabling this allows you to have bullet fling.", function(Check)
    _G.PDeath = Check
    print(_G.PDeath)
end)

Options3:NewToggle("Fling (CAN DIE)", "Allows you to fling on close range.", function(Check)
    _G.R15Bullet = Check
    print(_G.R15Bullet)
end)

Options3:NewToggle("Fix Head", "Fixes Your Head Jittering", function(Check)
    _G.R15HeadFix = Check
    print(_G.R15HeadFix)
end)
